.card
  .card-header
    .card-title style='text-align:center;font-size:16ptfont-size:16pt' 本鉴定中心案件统计分析
  .card-body
    .row
      .col-md-6
        .per-chart id='center_director_container3' style="height:500px;width:100%"
    .row
      .col-md-6
        .per-chart id='center_director_container' style="height:500px;width:100%"
      .col-md-6
        .per-chart id='center_director_container0' style="height:500px;width:100%"
    .row      
      .col-md-6
        .per-chart id='center_director_container1' style="height:500px;width:100%"
      .col-md-6
        .per-chart id='center_director_container2' style="height:500px;width:100%"


javascript:
  $(document).ready(function() {  
   var data = $('.hidden').text()
   console.log(data)
   var json_data = JSON.parse(data).center_director_user

   var chart = {
       plotBackgroundColor: null,
       plotBorderWidth: null,
       plotShadow: false
   };
   var title = {
      text: '今年案件数量-按委托方统计'   
   };   

   
   var tooltip = {
      pointFormat: '{series.name}: <b>{point.y}</b>'
   };

   var pie_data = [
         {y: 1,name: "鉴定中心1"},
         {y: 5,name: "鉴定中心2"},
         {y: 5,name: "鉴定中心3"}
      ]
   //输入数据   
   pie_data = json_data.center_cases_count

   var series= [{
      type: 'pie',
      name: '数量',
      data: pie_data
   }]; 

   var plotOptions = {
      pie: {
         allowPointSelect: true,
         cursor: 'pointer',
         dataLabels: {
            enabled: true,
            format: '<b>{point.name}</b>: {point.y}',
            style: {
               color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
            }
         }
      }
   };
    
      
   var json = {}; 
   json.chart = chart; 
   json.title = title;     
   json.tooltip = tooltip;  
   json.series = series;
   json.plotOptions = plotOptions;
   $('#center_director_container').highcharts(json);


  // ---------------

  var chart0 = {
       plotBackgroundColor: null,
       plotBorderWidth: null,
       plotShadow: false
   };
   var title0 = {
      text: '今年案件数量-按科室统计'   
   };   

   
   var tooltip0 = {
      pointFormat: '{series.name}: <b>{point.y}</b>'
   };

   var pie_data0 = [
         {y: 1,name: "鉴定中心1"},
         {y: 5,name: "鉴定中心2"},
         {y: 5,name: "鉴定中心3"}
      ]
   //输入数据    
   pie_data = json_data.department_cases_count

   var series0= [{
      type: 'pie',
      name: '数量',
      data: pie_data
   }]; 

   var plotOptions0 = {
      pie: {
         allowPointSelect: true,
         cursor: 'pointer',
         dataLabels: {
            enabled: true,
            format: '<b>{point.name}</b>: {point.percentage:.1f}% ',
            style: {
               color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
            }
         }
      }
   };
    
      
   var json0 = {}; 
   json0.chart = chart0; 
   json0.title = title0;     
   json0.tooltip = tooltip0;  
   json0.series = series0;
   json0.plotOptions = plotOptions0;
   $('#center_director_container0').highcharts(json0);


  // --------------- 

   var chart1 = {
      type: 'column'
   };
   var title1 = {
      text: '当前案件数量-按状态统计'   
   };
   var subtitle1 = {
      text: ''  
   };
   var xAxis1 = {
      categories: ['待立案',
                  '待补充材料',
                  '立案',
                  '退案',
                  '执行中',
                  '执行完成',
                  '申请归档',
                  '结案'],
      crosshair: true
   };
   var yAxis1 = {
      min: 0,
      title: {
         text: ''         
      }      
   };
   var tooltip1 = {
      headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
      pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
         '<td style="padding:0"><b>{point.y}</b></td></tr>',
      footerFormat: '</table>',
      shared: true,
      useHTML: true
   };
   var plotOptions1 = {
      column: {
         pointPadding: 0.2,
         borderWidth: 0
      }
   };  
   var credits1 = {
      enabled: false
   };
   //输入数据
   var stage_data =[]
   for(var i=0;i<json_data.stage_count.length;i++){
   stage_data.push(json_data.stage_count[i].count)
   }
   var series1= [{
        name: '案件数量',
            data: stage_data
        }];     
      
   var json1 = {};   
   json1.chart = chart1; 
   json1.title = title1;   
   json1.subtitle = subtitle1; 
   json1.tooltip = tooltip1;
   json1.xAxis = xAxis1;
   json1.yAxis = yAxis1;  
   json1.series = series1;
   json1.plotOptions = plotOptions1;  
   json1.credits = credits1;
   $('#center_director_container1').highcharts(json1);

   //--------------
   //输入数据
   var months = []
   var month_count = []
   for(var i=0;i<json_data.month_mycase_count.length;i++){
    months.push(json_data.month_mycase_count[i].time)
    month_count.push(json_data.month_mycase_count[i].count)
   }

   var title2 = {
      text: '本中心委托的案件数量-按月统计'   
   };
   var subtitle2 = {
      text: ''
   };
   var xAxis2 = {
      categories: months
   };
   var yAxis2 = {
      title: {
         text: ''
      },
      plotLines2: [{
         value: 0,
         width: 1,
         color: '#808080'
      }]
   };   

   var tooltip2 = {
      valueSuffix: ''
   }

   var legend2 = {
      layout: 'vertical',
      align: 'right',
      verticalAlign: 'middle',
      borderWidth: 0
   };

   var series2 =  [
      {
         name: '案件数量',
         data:  month_count
      }, 
   ];

   var json2 = {};

   json2.title = title2;
   json2.subtitle = subtitle2;
   json2.xAxis = xAxis2;
   json2.yAxis = yAxis2;
   json2.tooltip = tooltip2;
   json2.legend = legend2;
   json2.series = series2;

   $('#center_director_container2').highcharts(json2);


      // --------------
      // container3
      var colors = Highcharts.getOptions().colors,
          categories = json_data.province_count_count.province_count_cate,
          data = json_data.province_count_count.data,
          browserData = [],
          versionsData = [],
          i,
          j,
          dataLen = data.length,
          drillDataLen,
          brightness;
      // 构建数据数组
      for (i = 0; i < dataLen; i += 1) {
          // 添加浏览器数据
          browserData.push({
              name: categories[i],
              y: data[i].y,
              color: data[i].color
          });
          // 添加版本数据
          drillDataLen = data[i].drilldown.data.length;
          for (j = 0; j < drillDataLen; j += 1) {
              brightness = 0.2 - (j / drillDataLen) / 5;
              versionsData.push({
                  name: data[i].drilldown.categories[j],
                  y: data[i].drilldown.data[j],
                  color: Highcharts.Color(data[i].color).brighten(brightness).get()
              });
          }
      }
      // 创建图表
      $('#center_director_container3').highcharts({
          chart: {
              type: 'pie'
          },
          title: {
              text: '省市维度查看案件数量'
          },
          subtitle: {
              text: '内环为省，外环为市'
          },
          yAxis: {
              title: {
                  text: '总百分比市场份额'
              }
          },
          plotOptions: {
              pie: {
                  shadow: false,
                  center: ['50%', '50%']
              }
          },
          tooltip: {
              valueSuffix: '%'
          },
          series: [{
              name: '案件数量',
              data: browserData,
              size: '60%',
              dataLabels: {
                  formatter: function () {
                      return this.y > 5 ? this.point.name : null;
                  },
                  color: 'white',
                  distance: -30          // 距离值为负时显示在在扇区里面
              }
          }, {
              name: '版本',
              data: versionsData,
              size: '80%',
              innerSize: '60%',
              dataLabels: {
                  softConnector: false,   // 是否使用曲线
                  connectorColor: 'red', // 连接线颜色，默认是扇区颜色
                  distance: 20, // 数据标签与扇区距离
                  connectorPadding: 20,  // 数据标签与连接线的距离
                  formatter: function () {
                      // 通过函数判断是否显示数据标签，为了防止数据标签过于密集
                      return this.y > 1 ? '<b>' + this.point.name + ':</b> ' + this.y + '%' : null;
                  }
              }
          }]
      });
  });