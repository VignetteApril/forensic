css:
  @media print {
    #non-printable {
      display: none;
    }

    #printable {
      display: block;
    }
  }

  body {
    background-color: #E0E0E0;
    display: flex;
    justify-content: center;
  }

  .page {
    padding: 0px 20px 20px 20px;
    width: 800px;
    height: 464px;
    background-color: white;
  }

  .title {
    display: flex;
    justify-content: center;
  }

  .title-text {
    font-size: 25px;
  }

  .number-text {
    font-size: 10px;
  }

  .pull-right {
    float: right;
  }

  table {
    font-size: 10px;
    width: 100%;
  }

  td {
    width: 100px;
    border: solid #000 1px;
  }

  .print-footer {
    font-size: 10px;
  }

  .footer-info {
    margin-top: 10px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

body
  .page#printable
    .title
      span.title-text 缴费单
    .numbers
      span.number-text = "案件流水号：#{@payment_order.main_case.serial_no}"
      span.number-text = " 日期：" + Time.now.strftime('%Y年%m月%d日')
      span.number-text.pull-right = "案件编号：#{@payment_order.main_case.case_no_display}"
    .table-content
      table cellspacing="0" cellpadding="5"
        tr
          td 缴款人
          td = @payment_order.payer
          td 缴款人联系人
          td = @payment_order.payer_contacts
          td 缴款联系人电话
          td = @payment_order.payer_contacts_phone
        tr
          td 委托人
          td = @payment_order.consigner
          td 委托人联系人
          td = @payment_order.consiggner_contacts
          td 委托联系人电话
          td = @payment_order.consiggner_contacts_phone
        tr
          td 鉴定费
          td = @payment_order.appraisal_cost
          td 差旅费
          td = @payment_order.business_cost
          td 出庭费
          td = @payment_order.appear_court_cost
        tr
          td 调查费
          td = @payment_order.investigation_cost
          td 咨询费
          td = @payment_order.consult_cost
          td 其他
          td = @payment_order.other_cost
        tr
          td 缴费合计
          td#total_cost colspan="2" = @payment_order.total_cost
          td 预付金额
          td#pre_paid colspan="2" = @payment_order.payment_in_advance
        tr
          td 大写金额
          td#total_cost_big_num colspan="2"
          td 大写金额
          td#pre_paid_big_num colspan="2"
        tr
          td 汇款金额
          td = @payment_order.remit_pay
          td 汇款日期
          td = @payment_order.payment_date.nil? ? '' : @payment_order.payment_date.strftime('%Y年%m月%d日')
          td 汇款人
          td = @payment_order.payment_people
        tr
          td 现金金额
          td = @payment_order.cash_pay
          td 刷卡金额
          td = @payment_order.card_pay
          td 电子支付金额
          td = @payment_order.mobile_pay
        tr
          td 支票金额
          td = @payment_order.check_pay
          td 支票号码
          td = @payment_order.check_num
          td 委托受理方式
          td = @payment_order.payment_accept_type.nil? ? '' : PaymentOrder::PAYMENT_ACCEPT_MAP[@payment_order.payment_accept_type.to_sym]
    .print-footer
      .footer-info
        span = "收款单位：#{@main_case.department.organization.name}"
        span = "经办人：_____________"
        span = "交款人：_____________"
      .today
        = image_tag url_for(@payment_order.main_case.barcode_image), style: 'height: 50px; float: right' if @payment_order.main_case.barcode_image

javascript:
    window.print();

    function digitUppercase(n) {
      var fraction = ['角', '分'];
      var digit = [
          '零', '壹', '贰', '叁', '肆',
          '伍', '陆', '柒', '捌', '玖'
      ];
      var unit = [
          ['元', '万', '亿'],
          ['', '拾', '佰', '仟']
      ];
      var head = n < 0 ? '欠' : '';
      n = Math.abs(n);
      var s = '';
      for (var i = 0; i < fraction.length; i++) {
          s += (digit[Math.floor(n * 10 * Math.pow(10, i)) % 10] + fraction[i]).replace(/零./, '');
      }
      s = s || '整';
      n = Math.floor(n);
      for (var i = 0; i < unit[0].length && n > 0; i++) {
          var p = '';
          for (var j = 0; j < unit[1].length && n > 0; j++) {
              p = digit[n % 10] + unit[1][j] + p;
              n = Math.floor(n / 10);
          }
          s = p.replace(/(零.)*零$/, '').replace(/^$/, '零') + unit[0][i] + s;
      }
      return head + s.replace(/(零.)*零元/, '元')
          .replace(/(零.)+/g, '零')
          .replace(/^整$/, '零元整');
    }

    // 初始化字段
    var total_cost_big_num = document.getElementById('total_cost_big_num');
    var pre_paid_big_num = document.getElementById('pre_paid_big_num');

    var total_cost = document.getElementById('total_cost').textContent;
    var pre_paid = document.getElementById('pre_paid').textContent;

    total_cost_big_num.appendChild( document.createTextNode(digitUppercase(total_cost)) );
    pre_paid_big_num.appendChild( document.createTextNode(digitUppercase(pre_paid)) );
